/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package pfinal;

import java.io.File;
import javax.sound.sampled.LineEvent;
import javax.sound.sampled.LineListener;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import sm.sound.*;

/**
 * Clase de la ventana de grabación de audio.
 * @author Mario
 */
public class VentanaGrabacion extends javax.swing.JInternalFrame {

    /**
     * Creates new form VentanaGrabacion
     */
    SMRecorder recorder;
    File audio;
    /**
     * Constructor de la ventana de grabación.
     */
    public VentanaGrabacion() {
        initComponents();
    
        audio = new File("nuevo.wave");
        recorder = new SMSoundRecorder(audio);
        
           botonRecord.setSelectedIcon(new ImageIcon(this.getClass().getResource("/pfinal/iconos/RecordPressed_48x48.png")));
           botonRecord.setIcon(new ImageIcon(this.getClass().getResource("/pfinal/iconos/RecordDisabled_48x48.png")));
           botonStop.setSelectedIcon(new ImageIcon(this.getClass().getResource("/pfinal/iconos/StopPessedBlue_48x48.png")));
           botonStop.setIcon(new ImageIcon(this.getClass().getResource("/pfinal/iconos/StopDisabled_48x48.png")));
           
           LineListener lineListener=new LineListener(){
               public void update(LineEvent event) {
                 if(event.getType()==LineEvent.Type.START) {
                    botonStop.setSelected(false);
                 }
                 if(event.getType()==LineEvent.Type.STOP) {
                    botonRecord.setSelected(false);
                    
                    botonStop.setSelected(true);
                    
                 }
            } 
            };
               
            ((SMSoundRecorder)recorder).setLineListener(lineListener); 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        botonRecord = new javax.swing.JToggleButton();
        botonStop = new javax.swing.JToggleButton();

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.LINE_AXIS));

        buttonGroup1.add(botonRecord);
        botonRecord.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pfinal/iconos/RecordDisabled_48x48.png"))); // NOI18N
        botonRecord.setText("Record");
        botonRecord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonRecordActionPerformed(evt);
            }
        });
        getContentPane().add(botonRecord);

        buttonGroup1.add(botonStop);
        botonStop.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pfinal/iconos/StopPessedBlue_48x48.png"))); // NOI18N
        botonStop.setSelected(true);
        botonStop.setText("Stop");
        botonStop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonStopActionPerformed(evt);
            }
        });
        getContentPane().add(botonStop);

        pack();
    }// </editor-fold>//GEN-END:initComponents
/**
 * Función usada al pulsar el botón record.
 * @param evt 
 */
    private void botonRecordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonRecordActionPerformed
        recorder.record();
        audio = new File("nuevo.wave");
    }//GEN-LAST:event_botonRecordActionPerformed
    
    /**
     * Función usada al pulsar el botón stop. Se para de grabar y se lanza el dialogo de guardado.
     * @param evt 
     */
    private void botonStopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonStopActionPerformed
        recorder.stop();
        JFileChooser dlg = new JFileChooser();
        int resp = dlg.showSaveDialog(this);
        if( resp == JFileChooser.APPROVE_OPTION) {
            try{
                  File f = dlg.getSelectedFile();
                  audio.renameTo(f);
                  
            }catch(Exception ex){
                  System.err.println("Error al guardar el audio");
            }
         }
    }//GEN-LAST:event_botonStopActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton botonRecord;
    private javax.swing.JToggleButton botonStop;
    private javax.swing.ButtonGroup buttonGroup1;
    // End of variables declaration//GEN-END:variables
}
